// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using LCM.Repositories.Models;
using Microsoft.EntityFrameworkCore;

namespace LCM.Repositories;

public partial class CAEDB01Context : DbContext
{
    public CAEDB01Context(DbContextOptions<CAEDB01Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Evidence> Evidence { get; set; }

    public virtual DbSet<PnEvidence> PnEvidence { get; set; }

    public virtual DbSet<PnPrice> PnPrice { get; set; }

    public virtual DbSet<PoStatusDesc> PoStatusDesc { get; set; }

    public virtual DbSet<Status> Status { get; set; }

    public virtual DbSet<XxPor0001_Resell> XxPor0001_Resell { get; set; }

    public virtual DbSet<Xx_Po_Receipt> Xx_Po_Receipt { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .HasPostgresExtension("Procurement", "citext")
            .HasPostgresExtension("pg_catalog", "adminpack");

        modelBuilder.Entity<Evidence>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("_Evidence__pk");

            entity.ToTable("Evidence", "LCM");

            entity.Property(e => e.Sourcer)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UpdateTime).HasColumnType("timestamp without time zone");
            entity.Property(e => e.Updater)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<PnEvidence>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("_PnEvidence__pk");

            entity.ToTable("PnEvidence", "LCM");

            entity.Property(e => e.Remark).IsRequired();
            entity.Property(e => e.UpdateTime).HasColumnType("timestamp without time zone");
            entity.Property(e => e.Updater)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Evidence).WithMany(p => p.PnEvidence)
                .HasForeignKey(d => d.EvidenceID)
                .HasConstraintName("_PnEvidence__FK");

            entity.HasOne(d => d.PnPrice).WithMany(p => p.PnEvidence)
                .HasForeignKey(d => d.PnPriceID)
                .HasConstraintName("_PnEvidence__FK_1");
        });

        modelBuilder.Entity<PnPrice>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("_PnPrice__pk");

            entity.ToTable("PnPrice", "LCM");

            entity.Property(e => e.Org)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PartNumber)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Sourcer)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.StatusID).HasDefaultValueSql("1");
            entity.Property(e => e.UpdateTime).HasColumnType("timestamp without time zone");
            entity.Property(e => e.Updater)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Status).WithMany(p => p.PnPrice)
                .HasForeignKey(d => d.StatusID)
                .HasConstraintName("pnprice_fk");
        });

        modelBuilder.Entity<PoStatusDesc>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("_PoStatusDesc__pk");

            entity.ToTable("PoStatusDesc", "LCM");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Status>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("status_pk");

            entity.ToTable("Status", "LCM");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<XxPor0001_Resell>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("_XxPor0001_Resell__pk");

            entity.ToTable("XxPor0001_Resell", "LCM");

            entity.HasIndex(e => new { e.OrderNo, e.SOLine }, "xxpor0001_resell_un").IsUnique();

            entity.Property(e => e.OrderNo)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PENo)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PartNo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.SOLine)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.UpdateTime).HasColumnType("timestamp without time zone");
            entity.Property(e => e.Updater)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.Status).WithMany(p => p.XxPor0001_Resell)
                .HasForeignKey(d => d.StatusID)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("xxpor0001_resell_fk");
        });

        modelBuilder.Entity<Xx_Po_Receipt>(entity =>
        {
            entity.HasKey(e => e.TransactionID).HasName("xx_po_receipt_pk");

            entity.ToTable("Xx_Po_Receipt", "LCM");

            entity.Property(e => e.TransactionID).HasMaxLength(20);
            entity.Property(e => e.PONo)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.PartNo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UpdateTime).HasColumnType("timestamp without time zone");
            entity.Property(e => e.Updater)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.XxPor0001_Resell).WithMany(p => p.Xx_Po_Receipt)
                .HasForeignKey(d => d.XxPor0001_Resell_ID)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("xx_po_receipt_fk");
        });
        modelBuilder.HasSequence("BoxingName_ID_seq", "MachineStockManagement")
            .StartsAt(34L)
            .HasMax(2147483647L);

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}